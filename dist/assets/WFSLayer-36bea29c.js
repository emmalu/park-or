import{e as r,y as i,n as x}from"./cast-6d78d3c7.js";import"./geometry-70b2a4a5.js";import{k as P}from"./PopupTemplate-29fe62b5.js";import"./UniqueValueRenderer-8e382829.js";import{b as $,n as C}from"./jsonUtils-7ad404a7.js";import{r as I,e as E}from"./typedArrayUtil-d02f10a8.js";import{O as N}from"./MultiOriginJSONSupport-1970ed0f.js";import{h as U,o as _}from"./string-9c5e03f7.js";import{j as J}from"./request-e4299080.js";import{T as b}from"./ensureType-d98e08e1.js";import{a as j,k as q,r as k}from"./Extent-d5fff12d.js";import{i as y}from"./typeUtils-b6c52390.js";import{b as W}from"./Layer-f9f81f65.js";import{a as X}from"./Error-4ed679d7.js";import{a as D}from"./HandleOwner-6ac6f00a.js";import{m as Y}from"./Loadable-b0d5bb7e.js";import{x as L,E as Q}from"./promiseUtils-930cba29.js";import{u as V}from"./workers-e5f6a313.js";import{l as G,o as z}from"./clientSideDefaults-bea2dc01.js";import{D as M,X as B,z as A,W as H,C as K}from"./wfsUtils-f73acf3d.js";import Z from"./FeatureSet-622e3076.js";import{n as ee}from"./BlendLayer-7a735871.js";import{o as te}from"./CustomParametersMixin-5e3018da.js";import{n as re,p as ie}from"./FeatureReductionLayer-d24025a2.js";import{c as oe,d as se,m as ae,a as ne,u as pe,p as le,l as me,f as ue}from"./OperationalLayer-007b4c8b.js";import{c as de}from"./OrderedLayer-7b3473c8.js";import{v as ye}from"./PortalLayer-5c12bdba.js";import{p as ce}from"./RefreshableLayer-84ec1468.js";import{t as fe}from"./ScaleRangeLayer-c6a35aba.js";import{a as he}from"./TemporalLayer-ac8e2c3d.js";import{y as R}from"./Field-bb784640.js";import{s as ge}from"./fieldProperties-9268e64b.js";import{F as O,a as we}from"./fieldUtils-2efa8993.js";import{j as ve,i as Fe}from"./labelingInfo-69496ac8.js";import{x as d}from"./Query-066f2ccf.js";import{p as be}from"./popupUtils-40f744cb.js";import"./nextTick-3ee5a785.js";import"./Polyline-42dcc920.js";import"./Clonable-58355d3c.js";import"./Collection-42fe629f.js";import"./Evented-b378ccab.js";import"./SimpleObservable-e0897cc6.js";import"./jsonMap-5afaf2ff.js";import"./enumeration-497ef064.js";import"./number-c7f1bfee.js";import"./locale-30120714.js";import"./Identifiable-57df9761.js";import"./symbols-12804594.js";import"./CIMSymbol-33ea3902.js";import"./Symbol-1bb07043.js";import"./Color-b7b9e6bb.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-8b7acc4e.js";import"./aaBoundingBox-33fc923c.js";import"./persistableUrlUtils-d18becd9.js";import"./collectionUtils-3d8a9611.js";import"./Portal-95b0f852.js";import"./preload-helper-101896b7.js";import"./PortalGroup-813428fa.js";import"./PortalUser-4126c27a.js";import"./LegendOptions-e31ff575.js";import"./arcadeOnDemand-72a1843c.js";import"./reactiveUtils-b0e56010.js";import"./diffUtils-713e5c9b.js";import"./colorRamps-c00f504b.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-34c50417.js";import"./jsonUtils-5115c7e5.js";import"./compilerUtils-eefea0ec.js";import"./lengthUtils-0dde2114.js";import"./unitUtils-b69647a1.js";import"./jsonUtils-c8fbfbd0.js";import"./styleUtils-cde65ff5.js";import"./DictionaryLoader-46cd8e54.js";import"./LRUCache-4d56ba4d.js";import"./MemCache-1e028041.js";import"./deprecate-46fadabd.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./Promise-6bd0b483.js";import"./Connection-f53be4bf.js";import"./Queue-8aae62d3.js";import"./assets-6ba3cd63.js";import"./intl-a5c99ea3.js";import"./messages-634811b5.js";import"./QueryEngineCapabilities-42e44ded.js";import"./defaultsJSON-b087dd4d.js";import"./projection-6146477c.js";import"./mat4-62d5e6a4.js";import"./zscale-72b4355d.js";import"./geojson-dd0b9fb6.js";import"./OptimizedFeature-1bba65b5.js";import"./xmlUtils-444cb4c0.js";import"./fieldType-9bddd3d4.js";import"./parser-f68dd732.js";import"./TimeExtent-0fd238ea.js";import"./ElevationInfo-618e96ba.js";import"./asyncUtils-18831bb1.js";import"./PortalItem-bbd2de41.js";import"./TimeInfo-a1791ae0.js";import"./FieldsIndex-0e507864.js";import"./labelUtils-87bb22ff.js";let m=class extends D(Y){constructor(){super(...arguments),this._connection=null,this.capabilities=G(!1,!1),this.type="wfs",this.refresh=L(async e=>{await this.load();const{extent:t}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const t=I(e)?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const s=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return Z.fromJSON(s)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const s=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:s.count,extent:j.fromJSON(s.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _createLoadOptions(e){var F;const{url:t,customParameters:s,name:n,namespaceUri:p,spatialReference:a,fields:u,geometryType:c,swapXY:f}=this.layer;if(!t)throw new X("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await M(t,{customParameters:s,...e}));const h=["fields","geometryType","name","namespaceUri","spatialReference","swapXY"].some(w=>this.layer[w]==null),l=h?await B(this.wfsCapabilities,n,p,{spatialReference:a,customParameters:s,signal:e==null?void 0:e.signal}):{...A(u??[]),geometryType:c,name:n,namespaceUri:p,spatialReference:a,swapXY:f},g=E(H(this.wfsCapabilities.readFeatureTypes(),l.name,l.namespaceUri)),T=y.toJSON(l.geometryType);return{customParameters:s,featureType:g,fields:((F=l.fields)==null?void 0:F.map(w=>w.toJSON()))??[],geometryField:l.geometryField,geometryType:T,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:l.objectIdField,spatialReference:l.spatialReference.toJSON(),swapXY:!!l.swapXY}}async _startWorker(e){const[t,s]=await Q([this._createLoadOptions(e),V("WFSSourceWorker",{...e,strategy:U("feature-layers-workers")?"dedicated":"local"})]),n=t.error||s.error||null,p=s.value||null;if(n)throw p&&p.close(),n;const a=t.value;this._connection=s.value;const{extent:u}=await this._connection.invoke("load",a,e);this.sourceJSON={extent:u,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:z(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:3e3,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};r([i()],m.prototype,"capabilities",void 0),r([i({constructOnly:!0})],m.prototype,"layer",void 0),r([i()],m.prototype,"sourceJSON",void 0),r([i()],m.prototype,"type",void 0),r([i()],m.prototype,"wfsCapabilities",void 0),m=r([x("esri.layers.graphics.sources.WFSSource")],m);var v;const S=ge();let o=v=class extends de(te(re(ie(ee(he(ce(fe(oe(ye(N(W))))))))))){constructor(e){super(e),this.copyright=null,this.customParameters=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new m({layer:this}),this.spatialReference=q.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}static fromWFSLayerInfo(e){const{customParameters:t,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:u,objectIdField:c,spatialReference:f,swapXY:h,url:l,wfsCapabilities:g}=e;return new v({customParameters:t,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:u,objectIdField:c,spatialReference:f,swapXY:h,url:l,wfsCapabilities:g})}destroy(){var e;(e=this.source)==null||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),O(this.renderer,this.fieldsIndex),we(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){var e;return(e=this.source)==null?void 0:e.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,s){const n=e.filter(p=>p.name!==K);this.geometryField&&n.unshift(new R({name:this.geometryField,alias:this.geometryField,type:"geometry"})),_(s,n.map(p=>p.toJSON()),t)}get parsedUrl(){return J(this.url)}set renderer(e){O(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){var e;return(e=this.source)==null?void 0:e.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return be(this,e)}createQuery(){const e=new d;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:t,timeExtent:s}=this;return e.timeExtent=t!=null&&s!=null?s.offset(-t.value,t.unit):s||null,e}getFieldDomain(e,t){var s;return(s=this.getField(e))==null?void 0:s.domain}getField(e){var t;return(t=this.fieldsIndex)==null?void 0:t.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(d.from(e)||this.createQuery(),t)).then(s=>{if(s!=null&&s.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(d.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(d.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(d.from(e)||this.createQuery(),t))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return I(t)&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i({readOnly:!0})],o.prototype,"capabilities",null),r([i({type:String})],o.prototype,"copyright",void 0),r([i({readOnly:!0})],o.prototype,"createQueryVersion",null),r([i({json:{name:"wfsInfo.customParameters",write:{ignoreOrigin:!0}}})],o.prototype,"customParameters",void 0),r([i({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),r([i({type:String})],o.prototype,"displayField",void 0),r([i(se)],o.prototype,"elevationInfo",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"featureUrl",void 0),r([i({type:[R],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],o.prototype,"fields",void 0),r([k("fields")],o.prototype,"writeFields",null),r([i(S.fieldsIndex)],o.prototype,"fieldsIndex",void 0),r([i({type:j,json:{name:"extent"}})],o.prototype,"fullExtent",void 0),r([i()],o.prototype,"geometryField",void 0),r([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:y.read},write:{target:"layerDefinition.geometryType",writer:y.write,ignoreOrigin:!0},origins:{service:{read:y.read}}}})],o.prototype,"geometryType",void 0),r([i({type:String})],o.prototype,"id",void 0),r([i(ae)],o.prototype,"labelsVisible",void 0),r([i({type:[ve],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Fe},write:!0}})],o.prototype,"labelingInfo",void 0),r([i(ne)],o.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],o.prototype,"listMode",void 0),r([i({type:String})],o.prototype,"objectIdField",void 0),r([i({type:["WFS"]})],o.prototype,"operationalLayerType",void 0),r([i({type:b,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"maxFeatures",void 0),r([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],o.prototype,"mode",void 0),r([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"name",void 0),r([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"namespaceUri",void 0),r([i(pe)],o.prototype,"opacity",void 0),r([i(S.outFields)],o.prototype,"outFields",void 0),r([i({readOnly:!0})],o.prototype,"parsedUrl",null),r([i(le)],o.prototype,"popupEnabled",void 0),r([i({type:P,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),r([i({types:$,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:C,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],o.prototype,"renderer",null),r([i(me)],o.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],o.prototype,"source",void 0),r([i({type:q,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],o.prototype,"spatialReference",void 0),r([i({readOnly:!0,type:[b],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"spatialReferences",void 0),r([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"swapXY",void 0),r([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],o.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),r([i(ue)],o.prototype,"url",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"version",void 0),r([i()],o.prototype,"wfsCapabilities",null),o=v=r([x("esri.layers.WFSLayer")],o);const vr=o;export{vr as default};
