import{_ as K}from"./preload-helper-101896b7.js";import{e as i,y as s,n as w,l as R,u as M,f as O,t as W,q as z,w as E}from"./cast-6d78d3c7.js";import{g as Z}from"./Graphic-34c50417.js";import{k as H}from"./PopupTemplate-29fe62b5.js";import"./UniqueValueRenderer-8e382829.js";import{n as B}from"./jsonUtils-7ad404a7.js";import{U as D,G as X}from"./request-e4299080.js";import{j}from"./Collection-42fe629f.js";import{s as c,a as l}from"./Error-4ed679d7.js";import{t as f,q as Y,r as d}from"./typedArrayUtil-d02f10a8.js";import{O as ee}from"./MultiOriginJSONSupport-1970ed0f.js";import{w as te,j as re}from"./promiseUtils-930cba29.js";import{a as ie,U as oe,j as se}from"./reactiveUtils-b0e56010.js";import"./ensureType-d98e08e1.js";import{o as m}from"./Extent-d5fff12d.js";import{b as ae}from"./Layer-f9f81f65.js";import{i as ne}from"./APIKeyMixin-f90cfebd.js";import{p as pe}from"./ArcGISService-f6f32fbc.js";import{a as le}from"./EditBusLayer-1372e92b.js";import{c as de,d as ye,m as ue,a as ce,p as me,l as he}from"./OperationalLayer-007b4c8b.js";import{v as fe}from"./PortalLayer-5c12bdba.js";import{t as ge}from"./ScaleRangeLayer-c6a35aba.js";import{N as ve,L as $}from"./SceneService-596f37bd.js";import{t as we,y as be,l as Ie}from"./FetchAssociatedFeatureLayer-d4658f36.js";import{t as Le,a as Se}from"./FeatureReductionLayer-d24025a2.js";import{s as Fe}from"./fieldProperties-9268e64b.js";import{r as je}from"./FieldsIndex-0e507864.js";import{F as x,v as _e}from"./fieldUtils-2efa8993.js";import{s as N,l as Oe,u as Ee,m as $e}from"./I3SLayerDefinitions-faf8d899.js";import{j as xe,i as T}from"./labelingInfo-69496ac8.js";import{p as Te}from"./LayerFloorInfo-0d02c503.js";import{y as Ae}from"./string-9c5e03f7.js";import{g as Pe}from"./persistable-2122ab83.js";import{v as I}from"./Polyline-42dcc920.js";import{A as Re,m as De}from"./projection-6146477c.js";import{c as Ne}from"./persistableUrlUtils-d18becd9.js";import{t as qe}from"./styleUtils-45e2d86c.js";import{x as Ue}from"./Query-066f2ccf.js";import{t as Ce}from"./styleUtils-cde65ff5.js";import{p as Qe}from"./popupUtils-40f744cb.js";import{d as Ge,s as ke}from"./popupUtils-f83851e5.js";import{r as Ve}from"./opacityUtils-8b7acc4e.js";import"./nextTick-3ee5a785.js";import"./geometry-70b2a4a5.js";import"./typeUtils-b6c52390.js";import"./jsonMap-5afaf2ff.js";import"./symbols-12804594.js";import"./CIMSymbol-33ea3902.js";import"./enumeration-497ef064.js";import"./Symbol-1bb07043.js";import"./Color-b7b9e6bb.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./aaBoundingBox-33fc923c.js";import"./collectionUtils-3d8a9611.js";import"./Portal-95b0f852.js";import"./Loadable-b0d5bb7e.js";import"./Promise-6bd0b483.js";import"./locale-30120714.js";import"./PortalGroup-813428fa.js";import"./PortalUser-4126c27a.js";import"./Clonable-58355d3c.js";import"./jsonUtils-5115c7e5.js";import"./number-c7f1bfee.js";import"./Identifiable-57df9761.js";import"./LegendOptions-e31ff575.js";import"./arcadeOnDemand-72a1843c.js";import"./diffUtils-713e5c9b.js";import"./colorRamps-c00f504b.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-eefea0ec.js";import"./lengthUtils-0dde2114.js";import"./unitUtils-b69647a1.js";import"./jsonUtils-c8fbfbd0.js";import"./DictionaryLoader-46cd8e54.js";import"./LRUCache-4d56ba4d.js";import"./MemCache-1e028041.js";import"./deprecate-46fadabd.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./Evented-b378ccab.js";import"./SimpleObservable-e0897cc6.js";import"./arcgisLayerUrl-02fe1a62.js";import"./TimeExtent-0fd238ea.js";import"./ElevationInfo-618e96ba.js";import"./asyncUtils-18831bb1.js";import"./PortalItem-bbd2de41.js";import"./assets-6ba3cd63.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./HeightModelInfo-645087b5.js";import"./uuid-73213768.js";import"./resourceUtils-bab4da0f.js";import"./mat3-45e3f2eb.js";import"./mat3f64-b33e332c.js";import"./mat4-62d5e6a4.js";import"./mat4f64-3d813481.js";import"./quat-7867de93.js";import"./quatf64-7fd38d64.js";import"./I3SBinaryReader-7ae64c4b.js";import"./VertexAttribute-9c5c630d.js";import"./aaBoundingRect-ca34962d.js";import"./ViewingMode-fb6259a5.js";import"./symbolColorUtils-c8703525.js";import"./vec3f32-4322908d.js";import"./plane-0a19b20f.js";import"./sphere-ab105577.js";import"./byteSizeEstimations-90c5a50d.js";import"./vec2f64-e0301652.js";import"./FeatureLayer-95c99e68.js";import"./FeatureLayerBase-6192846c.js";import"./Field-bb784640.js";import"./fieldType-9bddd3d4.js";import"./RelationshipQuery-b5b427dc.js";import"./HandleOwner-6ac6f00a.js";import"./workers-e5f6a313.js";import"./Connection-f53be4bf.js";import"./Queue-8aae62d3.js";import"./intl-a5c99ea3.js";import"./messages-634811b5.js";import"./editsZScale-e318eb4a.js";import"./queryZScale-1674984c.js";import"./zscale-72b4355d.js";import"./FeatureSet-622e3076.js";import"./BlendLayer-7a735871.js";import"./parser-f68dd732.js";import"./CustomParametersMixin-5e3018da.js";import"./OrderedLayer-7b3473c8.js";import"./RefreshableLayer-84ec1468.js";import"./TemporalLayer-ac8e2c3d.js";import"./TimeInfo-a1791ae0.js";import"./FeatureTemplate-773a8865.js";import"./FeatureType-6c50f4e3.js";import"./versionUtils-5ccafbea.js";import"./TopFeaturesQuery-7da1d7c1.js";import"./labelUtils-87bb22ff.js";import"./defaultsJSON-b087dd4d.js";let y=class extends R{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([s({type:String,json:{read:!0,write:!0}})],y.prototype,"name",void 0),i([s({type:String,json:{read:!0,write:!0}})],y.prototype,"field",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],y.prototype,"currentRangeExtent",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],y.prototype,"fullRangeExtent",void 0),i([s({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],y.prototype,"type",void 0),y=i([w("esri.layers.support.RangeInfo")],y);var v;let L=v=class extends M(j.ofType(I)){constructor(e){super(e)}clone(){return new v(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){var r;const t=(r=e==null?void 0:e.layer)==null?void 0:r.spatialReference;return t?this.toArray().map(a=>{if(!t.equals(a.spatialReference)){if(!Re(a.spatialReference,t))return e&&e.messages&&e.messages.push(new O("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const p=new I;De(a,p,t),a=p}const n=a.toJSON(e);return delete n.spatialReference,n}).filter(a=>a!=null):(e!=null&&e.messages&&e.messages.push(new O("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(a=>a.toJSON(e)))}static fromJSON(e,t){const r=new v;return e.forEach(a=>r.add(I.fromJSON(a,t))),r}};L=v=i([w("esri.layers.support.PolygonCollection")],L);const S=L;var F;let h=F=class extends R{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new S,this._geometriesSource=null,this._handles=new W}initialize(){this._handles.add(ie(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,oe))}destroy(){this._handles.destroy()}readGeometries(e,t,r){this._geometriesSource={url:Ne(e,r),context:r}}async loadGeometries(e,t){if(f(this._geometriesSource))return;const{url:r,context:a}=this._geometriesSource,n=await D(r,{responseType:"json",signal:Y(t,"signal")}),p=e.toJSON(),u=n.data.map(b=>({...b,spatialReference:p}));this.geometries=S.fromJSON(u,a),this._geometriesSource=null}clone(){return new F({geometries:Ae(this.geometries),spatialRelationship:this.spatialRelationship})}};i([s({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],h.prototype,"spatialRelationship",void 0),i([s({type:S,nonNullable:!0,json:{write:!0}}),Pe({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],h.prototype,"geometries",void 0),i([m(["web-scene","portal-item"],"geometries")],h.prototype,"readGeometries",null),h=F=i([w("esri.layers.support.SceneFilter")],h);const Je=h,Ke=["3DObject","Point"],A=Fe();let o=class extends le(ve(pe(de(fe(ge(ee(ne(ae)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new j,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var a,n,p;const r=(n=(a=this.getFeatureType(t==null?void 0:t.feature))==null?void 0:a.domains)==null?void 0:n[e];return r&&r.type!=="inherited"?r:((p=this.getField(e))==null?void 0:p.domain)??null}getFeatureType(e){return e!=null&&d(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return d(this.associatedLayer)?this.associatedLayer.types??[]:[]}get typeIdField(){return d(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return d(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new je(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:N.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return Me[this.profile]||"mesh"}set renderer(e){x(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){const e=d(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:we,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:a,supportsUploadWithItemId:n,supportsReturnServiceEditsInSourceSpatialReference:p},data:{supportsZ:u,supportsM:b,isVersioned:q,supportsAttachment:U},operations:{supportsEditing:C,supportsAdd:Q,supportsUpdate:G,supportsDelete:k,supportsQuery:V,supportsQueryAttachments:J}}=e,g=e.operations.supportsChangeTracking,_=Ce();return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:p,supportsRollbackOnFailure:a,supportsGeometryUpdate:!1,supportsUploadWithItemId:n},data:{supportsAttachment:U,supportsZ:u,supportsM:b,isVersioned:q},operations:{supportsQuery:V,supportsQueryAttachments:J,supportsEditing:C&&g,supportsAdd:_&&Q&&g,supportsDelete:_&&k&&g,supportsUpdate:G&&g}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return d(this.associatedLayer)?this.associatedLayer.infoFor3D:null}get defaultPopupTemplate(){return d(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){return d(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return r!=null&&P[r]?P[r]:(c.getLogger(this.declaredClass).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=d(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(te).then(()=>this._fetchService(t)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),d(this.filter)?this.filter.loadGeometries(this.spatialReference):null])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>qe(this,{origin:"service"},t)).then(()=>x(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(e));return this.addResolvingPromise(r),Promise.resolve(this)}async beforeSave(){d(this.filter)&&await this.load()}createQuery(){const e=new Ue;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r!=null&&r.features)for(const a of r.features)a.layer=this,a.sourceLayer=this;return r})}async queryCachedAttributes(e,t){const r=_e(this.fieldsIndex,await Ge(this,ke(this)));return be(this.parsedUrl.path,this.attributeStorageInfo,e,t,r)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new l("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const a=new Z;return a.attributes=r[0],a.layer=this,a.sourceLayer=this,a}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(c.getLogger(this.declaredClass).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Qe(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return d(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),f(this.associatedLayer))throw new l("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new l("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new l("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new l("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const a of this.statisticsInfo)if(a.name===r.name){const n=X(this.parsedUrl.path,a.href);return D(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(p=>p.data)}throw new l("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations($.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations($.SAVE,e)}async applyEdits(e,t){const r=await K(()=>import("./editingSupport-0b80c852.js"),["assets/editingSupport-0b80c852.js","assets/Graphic-34c50417.js","assets/cast-6d78d3c7.js","assets/typedArrayUtil-d02f10a8.js","assets/string-9c5e03f7.js","assets/Error-4ed679d7.js","assets/ensureType-d98e08e1.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-930cba29.js","assets/geometry-70b2a4a5.js","assets/Extent-d5fff12d.js","assets/Polyline-42dcc920.js","assets/typeUtils-b6c52390.js","assets/jsonMap-5afaf2ff.js","assets/PopupTemplate-29fe62b5.js","assets/Clonable-58355d3c.js","assets/Collection-42fe629f.js","assets/Evented-b378ccab.js","assets/SimpleObservable-e0897cc6.js","assets/fieldUtils-2efa8993.js","assets/preload-helper-101896b7.js","assets/arcadeOnDemand-72a1843c.js","assets/enumeration-497ef064.js","assets/number-c7f1bfee.js","assets/locale-30120714.js","assets/Identifiable-57df9761.js","assets/symbols-12804594.js","assets/CIMSymbol-33ea3902.js","assets/Symbol-1bb07043.js","assets/Color-b7b9e6bb.js","assets/colorUtils-639f4d25.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/screenUtils-7afeb41c.js","assets/opacityUtils-8b7acc4e.js","assets/aaBoundingBox-33fc923c.js","assets/request-e4299080.js","assets/persistableUrlUtils-d18becd9.js","assets/collectionUtils-3d8a9611.js","assets/Portal-95b0f852.js","assets/Loadable-b0d5bb7e.js","assets/Promise-6bd0b483.js","assets/PortalGroup-813428fa.js","assets/PortalUser-4126c27a.js","assets/jsonUtils-5115c7e5.js","assets/uuid-73213768.js","assets/normalizeUtils-91a64c2b.js","assets/EditBusLayer-1372e92b.js"]);if(await this.load(),f(this.associatedLayer))throw new l(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),r.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&!Ke.includes(e.layerType))throw new l("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,a){let n=!1,p=!1;if(r==null)n=!0,p=!0;else{const u=a&&a.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,p=u;break;case"vertex-reference-frame":n=!0,p=!u;break;default:n=!1}}if(!n)throw new l("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!p)throw new l("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new l("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(n=>n.name===e.name)),r=!!(d(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(n=>n&&e.name===n.name)),a={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=a}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(f(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(f(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=z(this);for(let r=0;r<e.length;r++){const a=e[r],n=this.originIdOf(a),p=this.associatedLayer.originIdOf(a);n<p&&(p===E.SERVICE||p===E.PORTAL_ITEM)&&t.setAtOrigin(a,this.associatedLayer[a],p)}}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const t=new Ie(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(r){re(r)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await se(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?c.getLogger(this.declaredClass).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):c.getLogger(this.declaredClass).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;e&&(this.profile==="mesh-pyramids"&&e.mode==="relative-to-scene"&&c.getLogger(this.declaredClass).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&c.getLogger(this.declaredClass).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};i([s({types:{key:"type",base:Le,typeMap:{selection:Se}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],o.prototype,"featureReduction",void 0),i([s({type:[y],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],o.prototype,"rangeInfos",void 0),i([s({json:{read:!1}})],o.prototype,"associatedLayer",void 0),i([s({type:["show","hide"]})],o.prototype,"listMode",void 0),i([s({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),i([s({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([s({...A.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),i([s()],o.prototype,"types",null),i([s()],o.prototype,"typeIdField",null),i([s()],o.prototype,"formTemplate",null),i([s({readOnly:!0})],o.prototype,"fieldsIndex",null),i([s({type:Te,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),i([s(A.outFields)],o.prototype,"outFields",void 0),i([s({type:N,readOnly:!0,json:{read:!1}})],o.prototype,"nodePages",void 0),i([m("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),i([s({type:[Oe],readOnly:!0})],o.prototype,"materialDefinitions",void 0),i([s({type:[Ee],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),i([s({type:[$e],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([s({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),i([s({readOnly:!0})],o.prototype,"statisticsInfo",void 0),i([s({type:j.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),i([s({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),i([s({type:Je,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),i([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),i([s(ye)],o.prototype,"elevationInfo",null),i([s({type:String})],o.prototype,"geometryType",null),i([s(ue)],o.prototype,"labelsVisible",void 0),i([s({type:[xe],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:T},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:T},write:!0}})],o.prototype,"labelingInfo",void 0),i([s(ce)],o.prototype,"legendEnabled",void 0),i([s({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var a,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const r=(n=(a=t.layerDefinition)==null?void 0:a.drawingInfo)==null?void 0:n.transparency;return r!==void 0?Ve(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),i([s({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),i([s({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),i([s({types:B,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),i([s({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),i([m("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),i([s({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),i([s({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),i([s(me)],o.prototype,"popupEnabled",void 0),i([s({type:H,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),i([s({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),i([m("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),i([s({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),i([m("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),i([s({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),i([s({type:String,json:{read:!1}})],o.prototype,"profile",void 0),i([m("service","profile",["store.profile"])],o.prototype,"readProfile",null),i([s({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),i([s(he)],o.prototype,"screenSizePerspectiveEnabled",void 0),o=i([w("esri.layers.SceneLayer")],o);const P={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Me={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},Fi=o;export{Fi as default};
