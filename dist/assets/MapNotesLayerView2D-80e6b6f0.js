import{e as f,n as w}from"./cast-6d78d3c7.js";import{g as y}from"./Graphic-34c50417.js";import{j as _}from"./Collection-42fe629f.js";import{r as m,t as V}from"./typedArrayUtil-d02f10a8.js";import{l as h,h as a,a as v}from"./reactiveUtils-b0e56010.js";import"./Error-4ed679d7.js";import"./ensureType-d98e08e1.js";import"./string-9c5e03f7.js";import{i as C}from"./utils-1bc9587b.js";import{r as b}from"./GroupContainer-13f6834c.js";import{y as H,u as T}from"./LayerView-5e92a124.js";import{i as c}from"./GraphicContainer-ec6d8bc9.js";import{o as g}from"./BaseGraphicContainer-dfe82663.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-930cba29.js";import"./geometry-70b2a4a5.js";import"./Extent-d5fff12d.js";import"./Polyline-42dcc920.js";import"./typeUtils-b6c52390.js";import"./jsonMap-5afaf2ff.js";import"./PopupTemplate-29fe62b5.js";import"./Clonable-58355d3c.js";import"./fieldUtils-2efa8993.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-72a1843c.js";import"./enumeration-497ef064.js";import"./number-c7f1bfee.js";import"./locale-30120714.js";import"./Identifiable-57df9761.js";import"./symbols-12804594.js";import"./CIMSymbol-33ea3902.js";import"./Symbol-1bb07043.js";import"./Color-b7b9e6bb.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-8b7acc4e.js";import"./aaBoundingBox-33fc923c.js";import"./request-e4299080.js";import"./persistableUrlUtils-d18becd9.js";import"./collectionUtils-3d8a9611.js";import"./Portal-95b0f852.js";import"./Loadable-b0d5bb7e.js";import"./Promise-6bd0b483.js";import"./PortalGroup-813428fa.js";import"./PortalUser-4126c27a.js";import"./jsonUtils-5115c7e5.js";import"./Evented-b378ccab.js";import"./SimpleObservable-e0897cc6.js";import"./mat3f32-d3d088e8.js";import"./parser-f68dd732.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-cec287ae.js";import"./Utils-b6ef920f.js";import"./enums-ef042d89.js";import"./enums-64ab819c.js";import"./Texture-c2297638.js";import"./context-util-abf86a85.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./WGLContainer-69c7e591.js";import"./mat3-45e3f2eb.js";import"./vec2f32-461e65a9.js";import"./pixelUtils-a3529416.js";import"./vec2f64-e0301652.js";import"./VertexArrayObject-e1e46e3f.js";import"./ProgramTemplate-1afb8353.js";import"./StyleDefinition-ae208a94.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./vec2-f978aef8.js";import"./featureConversionUtils-d9ec654e.js";import"./OptimizedFeature-1bba65b5.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./HandleOwner-6ac6f00a.js";import"./ExpandedCIM-6cfcc2f7.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-ca34962d.js";import"./mat2d-80bd93af.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-8770173e.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-1f26dd3f.js";import"./normalizeUtils-91a64c2b.js";import"./projectionSupport-38cc9dc5.js";import"./projection-6146477c.js";import"./unitUtils-b69647a1.js";import"./assets-6ba3cd63.js";import"./zscale-72b4355d.js";import"./json-48e3ea08.js";import"./labelingInfo-69496ac8.js";import"./labelUtils-87bb22ff.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-c8fbfbd0.js";import"./FeatureContainer-e4e1ed67.js";import"./TileContainer-efb37002.js";import"./TileKey-ed432ae5.js";import"./Queue-8aae62d3.js";import"./visualVariablesUtils-9310c846.js";import"./visualVariablesUtils-4833b8d3.js";import"./lengthUtils-0dde2114.js";import"./capabilities-5736b16f.js";import"./Matcher-3b379faa.js";import"./TileStrategy-40f1ecb0.js";import"./TileStore-a368d16c.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-066f2ccf.js";import"./TimeExtent-0fd238ea.js";import"./Field-bb784640.js";import"./fieldType-9bddd3d4.js";import"./tileUtils-23b52606.js";import"./TileClipper-48ccb501.js";import"./Geometry-daada628.js";import"./LRUCache-4d56ba4d.js";import"./MemCache-1e028041.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-cde65ff5.js";import"./schemaUtils-37c9a4a8.js";import"./LayerFloorInfo-0d02c503.js";import"./diffUtils-713e5c9b.js";import"./createSymbolSchema-976acefa.js";import"./rendererUtils-a093890e.js";import"./FeatureReductionLayer-d24025a2.js";import"./BlendLayer-7a735871.js";import"./UniqueValueRenderer-8e382829.js";import"./LegendOptions-e31ff575.js";import"./colorRamps-c00f504b.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-eefea0ec.js";import"./jsonUtils-7ad404a7.js";import"./DictionaryLoader-46cd8e54.js";import"./deprecate-46fadabd.js";import"./OperationalLayer-007b4c8b.js";import"./ElevationInfo-618e96ba.js";import"./util-94bdf933.js";import"./ComputedAttributeStorage-85833802.js";import"./FeatureSetReader-9e0a2b1d.js";import"./centroid-7800ee74.js";import"./FieldsIndex-0e507864.js";import"./vec3f32-4322908d.js";const d="sublayers",n="layerView",I=Object.freeze({remove(){},pause(){},resume(){}});let l=class extends H(T){constructor(){super(...arguments),this._highlightIds=new Map,this.container=new b}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(r=>!!r.popupTemplate)).flat()}*graphicsViews(){m(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():m(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,t){return Array.from(this.graphicsViews(),r=>{const e=r.hitTest(i);if(m(this._graphicsViewsFeatureCollectionMap)){const p=this._graphicsViewsFeatureCollectionMap.get(r);for(const o of e)!o.popupTemplate&&p.popupTemplate&&(o.popupTemplate=p.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(r=>({type:"graphic",graphic:r,layer:this.layer,mapPoint:i}))}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof y?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):_.isCollection(i)&&(t=i.map(r=>r&&r.uid).toArray()),t=t.filter(r=>r!=null),t.length?(this._addHighlight(t),{remove:()=>{this._removeHighlight(t)}}):I}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),r=this.layer.featureCollections;if(m(r)&&r.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of r){const p=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:t,container:p});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.handles.add([h(()=>e.visible,s=>o.container.visible=s,a),h(()=>o.updating,()=>this.notifyChange("updating"),a)],n)}this._updateHighlight()}else m(this.layer.sublayers)&&this.handles.add(v(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(n);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),V(this.layer.sublayers))return;const i=[],t=this.view,r=()=>this.requestUpdate();for(const e of this.layer.sublayers){const p=new C,o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:t,graphics:e.graphics,requestUpdateCallback:r,container:o});this.handles.add([e.on("graphic-update",s.graphicUpdateHandler),h(()=>e.visible,u=>s.container.visible=u,a),h(()=>s.updating,()=>this.notifyChange("updating"),a)],n),p.addChild(s.container),this.container.addChild(p),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};l=f([w("esri.views.2d.layers.MapNotesLayerView2D")],l);const lr=l;export{lr as default};
