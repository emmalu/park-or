import{_ as R}from"./preload-helper-101896b7.js";import"./geometry-70b2a4a5.js";import{s as T,a as A}from"./Error-4ed679d7.js";import{r as L}from"./typedArrayUtil-d02f10a8.js";import{k as E}from"./Extent-d5fff12d.js";const M=T.getLogger("esri.support.arcadeOnDemand");let y;function O(){return y||(y=(async()=>{const t=await R(()=>import("./arcadeUtils-432ab0d0.js").then(e=>e.ax),["assets/arcadeUtils-432ab0d0.js","assets/geometry-70b2a4a5.js","assets/ensureType-d98e08e1.js","assets/string-9c5e03f7.js","assets/typedArrayUtil-d02f10a8.js","assets/Error-4ed679d7.js","assets/Extent-d5fff12d.js","assets/cast-6d78d3c7.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-930cba29.js","assets/Polyline-42dcc920.js","assets/typeUtils-b6c52390.js","assets/jsonMap-5afaf2ff.js","assets/preload-helper-101896b7.js","assets/datetime-7cb5ae9e.js","assets/number-bf398f16.js","assets/locale-30120714.js","assets/Field-bb784640.js","assets/enumeration-497ef064.js","assets/fieldType-9bddd3d4.js","assets/jsonUtils-5115c7e5.js","assets/featureConversionUtils-d9ec654e.js","assets/OptimizedFeature-1bba65b5.js","assets/OptimizedFeatureSet-1d1ac4b9.js","assets/request-e4299080.js","assets/unitUtils-b69647a1.js","assets/Portal-fbb2b73d.js","assets/Loadable-b0d5bb7e.js","assets/Promise-6bd0b483.js","assets/PortalGroup-813428fa.js","assets/PortalUser-cf18ae9d.js","assets/sizeVariableUtils-d4870b0d.js"]);return{arcade:t.arcade,arcadeUtils:t,Dictionary:t.Dictionary,Feature:t.arcadeFeature}})()),y}const J=(t,e,a)=>o.create(t,e,a,null,["$feature"]),N=(t,e,a)=>o.create(t,e,a,null,["$feature","$view"]),V=(t,e,a,c)=>o.create(t,e,a,c,["$feature","$view"]);class o{constructor(e,a,c,l,d,f,r,m){this.script=e,this.evaluate=d;const n=Array.isArray(r)?r:r.fields;this.fields=n,this._syntaxTree=l,this._arcade=a,this._arcadeDictionary=c,this._arcadeFeature=f,this._spatialReference=m,this._referencesGeometry=a.scriptTouchesGeometry(this._syntaxTree),this._referencesScale=this._arcade.referencesMember(this._syntaxTree,"scale")}static async create(e,a,c,l,d,f){const{arcade:r,Feature:m,Dictionary:n}=await O(),h=E.fromJSON(a);let i=null;try{i=r.parseScript(e,f)}catch(s){return M.error(new A("arcade-bad-expression","Failed to parse arcade script",{script:e,error:s})),null}const _=d.reduce((s,G)=>({...s,[G]:null}),{});let u=null;L(l)&&(u=new n(l),u.immutable=!0,_.$config=null);const w=r.scriptUsesGeometryEngine(i),x=w&&r.enableGeometrySupport(),S=r.scriptUsesFeatureSet(i)&&r.enableFeatureSetSupport(),F=r.scriptIsAsync(i),$=F&&r.enableAsyncSupport(),b={vars:_,spatialReference:h,useAsync:!!$};await Promise.all([x,S,$]);const v=new Set;await r.loadDependentModules(v,i,null,F,w);const p=new n;p.immutable=!1,p.setField("scale",0);const g=r.compileScript(i,b),D=s=>("$view"in s&&s.$view&&(p.setField("scale",s.$view.scale),s.$view=p),u&&(s.$config=u),g({vars:s,spatialReference:h}));return new o(e,r,n,i,D,new m,c,h)}repurposeFeature(e){return e.geometry&&!e.geometry.spatialReference&&(e.geometry.spatialReference=this._spatialReference),this._arcadeFeature.repurposeFromGraphicLikeObject(e.geometry,e.attributes,{fields:this.fields}),this._arcadeFeature}createDictionary(){return new this._arcadeDictionary}referencesMember(e){return this._arcade.referencesMember(this._syntaxTree,e)}referencesFunction(e){return this._arcade.referencesFunction(this._syntaxTree,e)}referencesGeometry(){return this._referencesGeometry}referencesScale(){return this._referencesScale}extractFieldLiterals(){return this._arcade.extractExpectedFieldLiterals(this._syntaxTree)}}export{O as i,J as n,N as o,o as p,V as u};
