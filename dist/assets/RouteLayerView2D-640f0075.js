import{e as m,y as g,n as d}from"./cast-6d78d3c7.js";import{j as n}from"./Collection-42fe629f.js";import{l as u}from"./CollectionFlattener-b89887c0.js";import{r as p,t as _}from"./typedArrayUtil-d02f10a8.js";import{h as w,l as c}from"./reactiveUtils-b0e56010.js";import"./ensureType-d98e08e1.js";import{b as y,h as f,O as k,g as v,f as M,a as I,D as V}from"./Stop-49c6a946.js";import{y as G,u as F}from"./LayerView-5e92a124.js";import{i as H}from"./GraphicContainer-ec6d8bc9.js";import{o as C}from"./BaseGraphicContainer-dfe82663.js";import"./string-9c5e03f7.js";import"./Error-4ed679d7.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-930cba29.js";import"./Evented-b378ccab.js";import"./SimpleObservable-e0897cc6.js";import"./Graphic-34c50417.js";import"./geometry-70b2a4a5.js";import"./Extent-d5fff12d.js";import"./Polyline-42dcc920.js";import"./typeUtils-b6c52390.js";import"./jsonMap-5afaf2ff.js";import"./PopupTemplate-29fe62b5.js";import"./Clonable-58355d3c.js";import"./fieldUtils-2efa8993.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-72a1843c.js";import"./enumeration-497ef064.js";import"./number-c7f1bfee.js";import"./locale-30120714.js";import"./Identifiable-57df9761.js";import"./symbols-12804594.js";import"./CIMSymbol-33ea3902.js";import"./Symbol-1bb07043.js";import"./Color-b7b9e6bb.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-8b7acc4e.js";import"./aaBoundingBox-33fc923c.js";import"./request-e4299080.js";import"./persistableUrlUtils-d18becd9.js";import"./collectionUtils-3d8a9611.js";import"./Portal-95b0f852.js";import"./Loadable-b0d5bb7e.js";import"./Promise-6bd0b483.js";import"./PortalGroup-813428fa.js";import"./PortalUser-4126c27a.js";import"./jsonUtils-5115c7e5.js";import"./utils-1bc9587b.js";import"./mat3f32-d3d088e8.js";import"./parser-f68dd732.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-cec287ae.js";import"./Utils-b6ef920f.js";import"./enums-ef042d89.js";import"./enums-64ab819c.js";import"./Texture-c2297638.js";import"./context-util-abf86a85.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./HandleOwner-6ac6f00a.js";import"./ExpandedCIM-6cfcc2f7.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-ca34962d.js";import"./mat2d-80bd93af.js";import"./vec2-f978aef8.js";import"./vec2f32-461e65a9.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-8770173e.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-1f26dd3f.js";import"./normalizeUtils-91a64c2b.js";import"./projectionSupport-38cc9dc5.js";import"./projection-6146477c.js";import"./unitUtils-b69647a1.js";import"./assets-6ba3cd63.js";import"./zscale-72b4355d.js";import"./json-48e3ea08.js";import"./labelingInfo-69496ac8.js";import"./labelUtils-87bb22ff.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-c8fbfbd0.js";import"./VertexArrayObject-e1e46e3f.js";import"./FeatureContainer-e4e1ed67.js";import"./mat3-45e3f2eb.js";import"./TileContainer-efb37002.js";import"./TileKey-ed432ae5.js";import"./WGLContainer-69c7e591.js";import"./pixelUtils-a3529416.js";import"./vec2f64-e0301652.js";import"./ProgramTemplate-1afb8353.js";import"./StyleDefinition-ae208a94.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./featureConversionUtils-d9ec654e.js";import"./OptimizedFeature-1bba65b5.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Queue-8aae62d3.js";import"./visualVariablesUtils-9310c846.js";import"./visualVariablesUtils-4833b8d3.js";import"./lengthUtils-0dde2114.js";import"./capabilities-5736b16f.js";import"./Matcher-3b379faa.js";import"./TileStrategy-40f1ecb0.js";import"./TileStore-a368d16c.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-066f2ccf.js";import"./TimeExtent-0fd238ea.js";import"./Field-bb784640.js";import"./fieldType-9bddd3d4.js";import"./tileUtils-23b52606.js";import"./TileClipper-48ccb501.js";import"./Geometry-daada628.js";import"./LRUCache-4d56ba4d.js";import"./MemCache-1e028041.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-cde65ff5.js";import"./schemaUtils-37c9a4a8.js";import"./LayerFloorInfo-0d02c503.js";import"./diffUtils-713e5c9b.js";import"./createSymbolSchema-976acefa.js";import"./rendererUtils-a093890e.js";import"./FeatureReductionLayer-d24025a2.js";import"./BlendLayer-7a735871.js";import"./UniqueValueRenderer-8e382829.js";import"./LegendOptions-e31ff575.js";import"./colorRamps-c00f504b.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-eefea0ec.js";import"./jsonUtils-7ad404a7.js";import"./DictionaryLoader-46cd8e54.js";import"./deprecate-46fadabd.js";import"./OperationalLayer-007b4c8b.js";import"./ElevationInfo-618e96ba.js";import"./util-94bdf933.js";import"./ComputedAttributeStorage-85833802.js";import"./FeatureSetReader-9e0a2b1d.js";import"./centroid-7800ee74.js";import"./FieldsIndex-0e507864.js";import"./vec3f32-4322908d.js";const b=Object.freeze({remove(){},pause(){},resume(){}}),U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],s={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof v||t instanceof M||t instanceof I||t instanceof V}function A(t){return n.isCollection(t)&&t.length&&l(t.getItemAt(0))}function $(t){return Array.isArray(t)&&t.length&&l(t[0])}let h=class extends G(F){constructor(){super(...arguments),this._graphics=new n,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>p(this.layer)&&!this.destroyed?[p(this.layer.routeInfo)?new n([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]:[]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),w)}destroy(){var t;this.handles.removeAll(),this.updatingHandles.removeAll(),this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:$(t)?t.map(e=>this._getNetworkFeatureUid(e)):A(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(p);return r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):b}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(p).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new C({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.handles.remove(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return _(r.symbol)?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(p));for(const i of t.added)this.handles.add([c(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),c(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,s.graphic=o,s.property=i,s.oldValue=e,s.newValue=r,this._graphicsView.graphicUpdateHandler(s)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};m([g()],h.prototype,"_graphics",void 0),m([g()],h.prototype,"_routeItems",null),h=m([d("esri.views.2d.layers.RouteLayerView2D")],h);const yr=h;export{yr as default};
