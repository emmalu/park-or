import{e as i,y as r,n as h}from"./cast-6d78d3c7.js";import"./geometry-70b2a4a5.js";import{a as y}from"./Error-4ed679d7.js";import{r as d}from"./typedArrayUtil-d02f10a8.js";import{x as w,w as S}from"./promiseUtils-930cba29.js";import{j as O}from"./request-e4299080.js";import"./ensureType-d98e08e1.js";import{a as F,o as b,k as I}from"./Extent-d5fff12d.js";import q from"./FeatureLayer-95c99e68.js";import{h as N}from"./string-9c5e03f7.js";import{m as _}from"./Loadable-b0d5bb7e.js";import{u as x}from"./workers-e5f6a313.js";import J from"./FeatureSet-622e3076.js";import{l as j}from"./clientSideDefaults-bea2dc01.js";import{x as l}from"./Query-066f2ccf.js";import{p as C,f as P}from"./persistableUrlUtils-d18becd9.js";import"./nextTick-3ee5a785.js";import"./Polyline-42dcc920.js";import"./typeUtils-b6c52390.js";import"./jsonMap-5afaf2ff.js";import"./preload-helper-101896b7.js";import"./PopupTemplate-29fe62b5.js";import"./Clonable-58355d3c.js";import"./Collection-42fe629f.js";import"./Evented-b378ccab.js";import"./SimpleObservable-e0897cc6.js";import"./fieldUtils-2efa8993.js";import"./arcadeOnDemand-72a1843c.js";import"./enumeration-497ef064.js";import"./number-c7f1bfee.js";import"./locale-30120714.js";import"./Identifiable-57df9761.js";import"./UniqueValueRenderer-8e382829.js";import"./symbols-12804594.js";import"./CIMSymbol-33ea3902.js";import"./Symbol-1bb07043.js";import"./Color-b7b9e6bb.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-8b7acc4e.js";import"./aaBoundingBox-33fc923c.js";import"./collectionUtils-3d8a9611.js";import"./Portal-95b0f852.js";import"./PortalGroup-813428fa.js";import"./PortalUser-4126c27a.js";import"./LegendOptions-e31ff575.js";import"./reactiveUtils-b0e56010.js";import"./diffUtils-713e5c9b.js";import"./colorRamps-c00f504b.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-34c50417.js";import"./jsonUtils-5115c7e5.js";import"./compilerUtils-eefea0ec.js";import"./lengthUtils-0dde2114.js";import"./unitUtils-b69647a1.js";import"./jsonUtils-c8fbfbd0.js";import"./styleUtils-cde65ff5.js";import"./jsonUtils-7ad404a7.js";import"./DictionaryLoader-46cd8e54.js";import"./LRUCache-4d56ba4d.js";import"./MemCache-1e028041.js";import"./deprecate-46fadabd.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./MultiOriginJSONSupport-1970ed0f.js";import"./LayerFloorInfo-0d02c503.js";import"./FeatureLayerBase-6192846c.js";import"./Field-bb784640.js";import"./fieldType-9bddd3d4.js";import"./HeightModelInfo-645087b5.js";import"./arcgisLayerUrl-02fe1a62.js";import"./OperationalLayer-007b4c8b.js";import"./TimeExtent-0fd238ea.js";import"./ElevationInfo-618e96ba.js";import"./RelationshipQuery-b5b427dc.js";import"./Layer-f9f81f65.js";import"./HandleOwner-6ac6f00a.js";import"./Promise-6bd0b483.js";import"./editsZScale-e318eb4a.js";import"./queryZScale-1674984c.js";import"./zscale-72b4355d.js";import"./APIKeyMixin-f90cfebd.js";import"./ArcGISService-f6f32fbc.js";import"./BlendLayer-7a735871.js";import"./parser-f68dd732.js";import"./mat4-62d5e6a4.js";import"./CustomParametersMixin-5e3018da.js";import"./EditBusLayer-1372e92b.js";import"./FeatureReductionLayer-d24025a2.js";import"./labelingInfo-69496ac8.js";import"./labelUtils-87bb22ff.js";import"./defaultsJSON-b087dd4d.js";import"./OrderedLayer-7b3473c8.js";import"./PortalLayer-5c12bdba.js";import"./asyncUtils-18831bb1.js";import"./PortalItem-bbd2de41.js";import"./assets-6ba3cd63.js";import"./RefreshableLayer-84ec1468.js";import"./ScaleRangeLayer-c6a35aba.js";import"./TemporalLayer-ac8e2c3d.js";import"./TimeInfo-a1791ae0.js";import"./FeatureTemplate-773a8865.js";import"./FeatureType-6c50f4e3.js";import"./fieldProperties-9268e64b.js";import"./FieldsIndex-0e507864.js";import"./versionUtils-5ccafbea.js";import"./styleUtils-45e2d86c.js";import"./TopFeaturesQuery-7da1d7c1.js";import"./popupUtils-40f744cb.js";import"./Connection-f53be4bf.js";import"./Queue-8aae62d3.js";import"./intl-a5c99ea3.js";import"./messages-634811b5.js";import"./QueryEngineCapabilities-42e44ded.js";let a=class extends _{constructor(t){super(t),this.type="csv",this.refresh=w(async e=>{await this.load();const{extent:s,timeExtent:n}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=s,n&&(this.sourceJSON.timeInfo.timeExtent=[n.start,n.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=d(t)?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;(t=this._connection)==null||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return J.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:F.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await x("CSVSourceWorker",{strategy:N("feature-layers-workers")?"dedicated":"local",signal:t});const{url:e,delimiter:s,fields:n,latitudeField:f,longitudeField:g,spatialReference:p,timeInfo:m}=this.loadOptions,u=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:n==null?void 0:n.map(v=>v.toJSON()),latitudeField:f,longitudeField:g,spatialReference:p==null?void 0:p.toJSON(),timeInfo:m==null?void 0:m.toJSON()}},{signal:t});this.locationInfo=u.locationInfo,this.sourceJSON=u.layerDefinition,this.delimiter=u.delimiter}};i([r()],a.prototype,"type",void 0),i([r()],a.prototype,"loadOptions",void 0),i([r()],a.prototype,"customParameters",void 0),i([r()],a.prototype,"locationInfo",void 0),i([r()],a.prototype,"sourceJSON",void 0),i([r()],a.prototype,"delimiter",void 0),a=i([h("esri.layers.graphics.sources.CSVSource")],a);function c(t,e){throw new y(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends q{constructor(...t){super(...t),this.geometryType="point",this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=I.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=d(t)?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(S).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!(e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.labelingInfo)}set url(t){if(!t)return void this._set("url",t);const e=O(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new a({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url},customParameters:this.customParameters});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(s=>{if(s!=null&&s.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}queryObjectIds(t,e){return this.load().then(()=>this.source.queryObjectIds(l.from(t)||this.createQuery()))}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new y("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return c(this,"csv-layer:save")}async saveAs(t,e){return c(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return d(e)&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([b("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:a,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:C,write:{isRequired:!0,ignoreOrigin:!0,writer:P}}})],o.prototype,"url",null),o=i([h("esri.layers.CSVLayer")],o);const We=o;export{We as default};
